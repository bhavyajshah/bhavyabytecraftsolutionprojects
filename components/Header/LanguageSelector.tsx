/**
 * This code was generated by Builder.io.
 */
import React, { useState, useRef, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";

interface LanguageSelectorProps {
  isDarkMode: boolean;
}

const languages = ["English", "Spanish", "French", "German"];

const LanguageSelector: React.FC<LanguageSelectorProps> = ({ isDarkMode }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [selectedLanguage, setSelectedLanguage] = useState("English");
  const dropdownRef = useRef<HTMLDivElement>(null);

  const toggleDropdown = () => setIsOpen(!isOpen);

  const selectLanguage = (language: string) => {
    setSelectedLanguage(language);
    setIsOpen(false);
  };

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target as Node)
      ) {
        setIsOpen(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  return (
    <div className="relative" ref={dropdownRef}>
      <button
        onClick={toggleDropdown}
        className={`flex flex-col justify-center self-stretch py-2.5 pr-4 pl-2.5 my-auto text-lg font-medium leading-none whitespace-nowrap ${
          isDarkMode
            ? "bg-gray-700 text-white border-gray-600"
            : "bg-white text-indigo-950 border-gray-100"
        } border border-solid shadow-sm rounded-[50px] hover:shadow-md transition-shadow duration-300`}
      >
        <div className="flex gap-7 items-center">
          <div className="flex gap-2 self-stretch my-auto rounded-[83px] w-[104px]">
            <img
              src="http://b.io/ext_4-"
              alt=""
              className="object-contain shrink-0 w-9 aspect-square fill-white"
            />
            <span className="my-auto">{selectedLanguage}</span>
          </div>
          <svg
            className={`w-4 h-4 transition-transform duration-300 ${
              isOpen ? "transform rotate-180" : ""
            }`}
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M19 9l-7 7-7-7"
            />
          </svg>
        </div>
      </button>
      <AnimatePresence>
        {isOpen && (
          <motion.ul
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -10 }}
            className={`absolute z-10 mt-2 w-full ${
              isDarkMode
                ? "bg-gray-800 border-gray-700"
                : "bg-white border-gray-100"
            } border rounded-md shadow-lg`}
          >
            {languages.map((language, index) => (
              <motion.li
                key={language}
                initial={{ opacity: 0, x: -10 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: index * 0.1 }}
              >
                <button
                  onClick={() => selectLanguage(language)}
                  className={`block w-full text-left px-4 py-2 text-sm ${
                    isDarkMode
                      ? "text-gray-300 hover:bg-gray-700 hover:text-white"
                      : "text-gray-700 hover:bg-gray-100"
                  } transition-colors duration-300`}
                >
                  {language}
                </button>
              </motion.li>
            ))}
          </motion.ul>
        )}
      </AnimatePresence>
    </div>
  );
};

export default LanguageSelector;
